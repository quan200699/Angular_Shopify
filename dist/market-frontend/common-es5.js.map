{"version":3,"sources":["src/app/helper/auth-guard.ts","src/app/service/warehouse/warehouse.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlSegment\r\n} from '@angular/router';\r\nimport {UserToken} from '../model/user-token';\r\nimport {AuthenticationService} from \"../service/auth/authentication.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\r\n  currentUser: UserToken;\r\n\r\n  constructor(private router: Router,\r\n              private authService: AuthenticationService) {\r\n    this.authService.currentUser.subscribe(\r\n      user => {\r\n        this.currentUser = user;\r\n      }\r\n    );\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.currentUser) {\r\n      return true;\r\n    } else {\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/', 'login'], {queryParams: {returnUrl: state.url}});\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.currentUser) {\r\n      return true;\r\n    } else {\r\n      // not logged in so redirect to login page with the return url\r\n      this.router.navigate(['/', 'coach', 'login'], {queryParams: {returnUrl: state.url}});\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canLoad(route: Route, segments: UrlSegment[]) {\r\n    return true;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../../environments/environment\";\nimport {Warehouse} from \"../../model/warehouse\";\n\nconst API_URL = `${environment.apiUrl}`\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllWarehouse(): Observable<Warehouse[]> {\n    return this.http.get<Warehouse[]>(API_URL + '/warehouses');\n  }\n\n  createWarehouse(warehouse: Warehouse): Observable<Warehouse> {\n    return this.http.post<Warehouse>(API_URL + '/warehouses', warehouse);\n  }\n\n  getWarehouse(id: number): Observable<Warehouse> {\n    return this.http.get<Warehouse>(API_URL + `/warehouses/${id}`)\n  }\n\n  updateWarehouse(id: number, warehouse: Warehouse): Observable<Warehouse> {\n    return this.http.put<Warehouse>(API_URL + `/warehouses/${id}`, warehouse)\n  }\n\n  deleteWarehouse(id: number): Observable<Warehouse> {\n    return this.http.delete<Warehouse>(API_URL + `/warehouses/${id}`);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}